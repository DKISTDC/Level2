module NSO.Image.Primary where

import Control.Exception (Exception)
import Data.Massiv.Array ()
import Effectful
import Effectful.Error.Static
import Effectful.GenRandom
import NSO.Image.Headers
import NSO.Image.Headers.Keywords (HeaderKeywords (..))
import NSO.Image.Headers.Parse (ParseError (..), runParseError)
import NSO.Prelude
import NSO.Types.Common
import NSO.Types.Inversion (Inversion)
import Telescope.Fits as Fits


data PrimaryHeader = PrimaryHeader
  { observation :: Observation
  , telescope :: Telescope
  , datacenter :: Datacenter
  , dkist :: DKISTHeader
  , adaptive :: AdaptiveOptics
  , contributing :: ContribExpProp
  }
  deriving (Generic, HeaderKeywords)


-- TODO: You can't make an instance for PrimaryHeader
-- because you need to do [PrimaryHeader] or something equivalent

primaryHeader :: (Error PrimaryError :> es, GenRandom :> es) => Id Inversion -> BinTableHDU -> Eff es PrimaryHeader
primaryHeader ii l1 = runParseError PrimaryParse $ do
  observation <- observationHeader l1.header
  telescope <- telescopeHeader l1.header
  datacenter <- datacenterHeader l1.header ii
  dkist <- dkistHeader l1.header
  contributing <- contribExpProp l1.header
  adaptive <- adaptiveOpticsHeader l1.header
  pure $ PrimaryHeader{observation, telescope, datacenter, dkist, adaptive, contributing}


primaryHDU :: PrimaryHeader -> PrimaryHDU
primaryHDU h =
  let hs = runPureEff $ writeHeader allKeys
   in PrimaryHDU (Header hs) emptyDataArray
 where
  allKeys = do
    primKeys
    teleKeys
    datacenterKeys
    dkistKeys
    adaptiveKeys

  primKeys = do
    sectionHeader "Observation" "Keys describing the observation and general metadata"
    addKeywords $ headerKeywords @Observation h.observation

  teleKeys = do
    sectionHeader "Telescope" "Keys describing the pointing and op of the Telescope"
    addKeywords $ headerKeywords @Telescope h.telescope

  datacenterKeys = do
    sectionHeader "Datacenter" "Keys generated by the DKIST data center to describe processing performed, archiving or extra metadata"
    addKeywords $ headerKeywords @Datacenter h.datacenter
    addKeywords $ headerKeywords @ContribExpProp h.contributing

  dkistKeys = do
    sectionHeader "DKIST Operations" "Information about this configuration or operations of the facility when generating this data"
    addKeywords $ headerKeywords @DKISTHeader h.dkist

  adaptiveKeys = do
    sectionHeader "Adaptive Optics" "Keys describing aspects of the adaptive optics system"
    addKeywords $ headerKeywords @AdaptiveOptics h.adaptive


data PrimaryError
  = PrimaryParse ParseError
  deriving (Show, Exception, Eq)
