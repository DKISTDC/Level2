server {
    listen 443 ssl;
    server_name localhost;
    # resolver 8.8.8.8 ipv6=off;

    ssl_certificate /etc/nginx/certs/localhost.pem;
    ssl_certificate_key /etc/nginx/certs/localhost-key.pem;

    location / {
        proxy_pass http://host.docker.internal:3033;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        proxy_next_upstream error timeout http_502 http_503 http_504 non_idempotent;
        proxy_next_upstream_timeout 20s;
        proxy_next_upstream_tries 10;

        # Local Deveopment
        keepalive_timeout 0s; # when developing - prevent reload delay

        # None of these are working
        # proxy_connect_timeout 1s;    # Reduce the timeout for connecting to the backend
        # proxy_read_timeout 1s;      # Set the read timeout from the upstream
        # proxy_send_timeout 1s;      # Set the send timeout to the upstream

        # proxy_ssl_verify off;

    }

    # Health check endpoint for liveness
    # location /health {
    #     proxy_pass http://host.docker.internal:3033/health;
    #     proxy_set_header Host $host;
    # }
}
